import os
#from langchain_community.chat_models import AzureChatOpenAI
from langchain_openai import AzureChatOpenAI
from langchain_community.utilities.sql_database import SQLDatabase
from langchain.chains import create_sql_query_chain
from utils.load_env import load_environment
from sqlalchemy import text


load_environment()


db_uri = f"mssql+pymssql://{user}:{pwd}@{server}/{database}"
print("Connecting to DB with URI:")
print(db_uri)
db = SQLDatabase.from_uri(db_uri)

from langchain_openai import AzureChatOpenAI

llm = AzureChatOpenAI(
    azure_endpoint=os.environ["AZURE_OPENAI_ENDPOINT"],
    api_key=os.environ["AZURE_OPENAI_API_KEY"],
    deployment_name=os.environ["AZURE_OPENAI_DEPLOYMENT_NAME"],
    api_version="2023-03-15-preview",
    timeout=15,
)

print("‚úÖ Testing LLM...")
res = llm.invoke("Say hello in one word.")
print(res)

sql_chain = create_sql_query_chain(llm, db)

print("üîç Tables:", db.get_usable_table_names())
print("üìã Schema:")
print(db.get_table_info())

import time

# def ask_db(question):
#     print(f"üß† Asking: {question}")
#     start = time.time()
#     result = sql_chain.invoke({"question": question})
#     print(f"‚úÖ Response in {round(time.time() - start, 2)}s")
#     return result
def ask_db(question):
    print(f"\nüß† Asking: {question}")
    llm_output = sql_chain.invoke({"question": question})
    print(f"üí° SQL generated by LLM:\n{llm_output}")

    # Extract the actual SQL query
    if "SQLQuery:" in llm_output:
        sql_query = llm_output.split("SQLQuery:")[1].strip()
    else:
        sql_query = llm_output.strip()

    # Run the query
    with db._engine.connect() as connection:
        #result = connection.execute(sql_query)
        result = connection.execute(text(sql_query))
        rows = result.fetchall()

        if not rows:
            return "No results found."

        return "\n".join(str(row) for row in rows)


if __name__ == "__main__":
    question = "How many rows are in the Sales table?"
    result = ask_db(question)
    print("Answer is :", result)

